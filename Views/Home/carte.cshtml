@{
    ViewData["Title"] = "Carte";
    var data = ViewBag.AllBikeStations;
  }
  <!DOCTYPE html>
  <html>
  <head>
    <meta charset="utf-8">
    <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.css" />
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.Default.css" />
    <style type="text/css">
      #map { /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
        height: 400px;
      }
    </style>
    <title>Carte</title>
  </head>
  <body>
    <div id="map">
      <!-- Ici s'affichera la carte -->
    </div>

    <!-- Fichiers Javascript -->
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
    <script type='text/javascript' src='https://unpkg.com/leaflet.markercluster@1.3.0/dist/leaflet.markercluster.js'></script>
    <script type="text/javascript">
        // On initialise la latitude et la longitude de Paris (centre de la carte)
        var lat = 48.8534;
        var lon = 2.3488;
        var macarte = null;
        var markerClusters;
        var stations = [];// Servira à stocker les groupes de marqueurs
        @foreach(var station in data)
        {
            <text>
        stations.push({
            "name": "@station.name",
            "lat": "@station.lat",
            "lon": "@station.lng",
            "adresse" : "@station.address",
            "available_bikes": "@station.available_bikes",
            "available_stands": "@station.available_bike_stands",
            "id" : "@station.gid"
        });
            </text>
        };
        // Fonction d'initialisation de la carte
        function initMap() {
            var markers = []; // Nous initialisons la liste des marqueurs
	// Nous définissons le dossier qui contiendra les marqueurs
	var iconBase = 'http://localhost/carte/icons/';
	// Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
	macarte = L.map('map').setView([lat, lon], 11);
	markerClusters = L.markerClusterGroup(); // Nous initialisons les groupes de marqueurs
	// Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
	L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
		// Il est toujours bien de laisser le lien vers la source des données
		attribution: 'données © OpenStreetMap/ODbL - rendu OSM France',
		minZoom: 1,
		maxZoom: 20
    }).addTo(macarte);
	// Nous parcourons la liste des villes
	for (station in stations) {
		// Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)
        var myIcon = L.icon({
            iconUrl: 'https://' + window.location.host + "/img/marker.png",
			iconSize: [50, 50],
			iconAnchor: [25, 50],
			popupAnchor: [-3, -76],
        });
		var marker = L.marker([stations[station].lat, stations[station].lon], { icon: myIcon }); // pas de addTo(macarte), l'affichage sera géré par la bibliothèque des clusters
        marker.bindPopup(stations[station].name + '<br>Velovs disponibles : ' + stations[station].available_bikes + '<br>Places disponibles : ' + stations[station].available_stands + '<br><a class="btn btn-danger" href='+window.location.origin+'/Carte/AddStationToFav/'+stations[station].id+'>Ajouter aux favoris</a>');
		markerClusters.addLayer(marker); // Nous ajoutons le marqueur aux groupes
        markers.push(marker); // Nous ajoutons le marqueur à la liste des marqueurs
	}
        var group = new L.featureGroup(markers); // Nous créons le groupe des marqueurs pour adapter le zoom
	    //macarte.fitBounds(group.getBounds().pad(0.5)); // Nous demandons à ce que tous les marqueurs soient visibles, et ajoutons un padding (pad(0.5)) pour que les marqueurs ne soient pas coupés
	    macarte.addLayer(markerClusters);
    }
        window.onload = function () {
            //Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
            if ("geolocation" in navigator) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    lat = position.coords.latitude;
                    lon = position.coords.longitude;
                    initMap();
                }, () => { initMap(); });
            }
        };
    </script>
  </body>
</html>
